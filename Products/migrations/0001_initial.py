# Generated by Django 3.2.8 on 2022-07-27 23:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Orders', '0001_initial'),
        ('Projects', '0001_initial'),
        ('UserAccounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PO_Delivery_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Delivery_Date', models.DateTimeField(help_text='delivery date', null=True)),
                ('Is_Delivered_Fully', models.BooleanField(default=False, help_text='mark it if all material as per PO delevered')),
                ('Want_To_Close_PO', models.BooleanField(default=False, help_text='mark it if not want futher delivery with this PO')),
                ('Next_Commitment_Date', models.DateField(blank=True, help_text='yyyy-mm-dd', null=True)),
                ('Remarks', models.TextField(blank=True, help_text='specify if any comments or remarks on delivery', max_length=500, null=True)),
                ('Attach', models.FileField(blank=True, help_text='attach if any delivery challan against PO delivery from vendor', null=True, upload_to='vendorinvoices/')),
            ],
        ),
        migrations.CreateModel(
            name='PO_Terms_Conditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Terms_and_Condition1', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition2', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition3', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition4', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition5', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition6', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition7', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition8', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Purchase_TC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Terms_and_Condition1', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition2', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition3', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition4', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition5', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition6', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition7', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
                ('Terms_and_Condition8', models.CharField(blank=True, help_text='optional', max_length=70, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Purchases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Purchase_Details', models.TextField(blank=True, help_text='overall PO short description', max_length=1000, null=True)),
                ('PO_No', models.CharField(blank=True, help_text='PO No', max_length=30, null=True, unique=True)),
                ('PO_No_1', models.IntegerField(blank=True, default=0, null=True)),
                ('FY', models.CharField(blank=True, help_text='financial year such as 22-23, 23-24 etc..', max_length=10, null=True)),
                ('PO_Date', models.DateTimeField(blank=True, help_text='billed date', null=True)),
                ('PO_Value', models.FloatField(blank=True, help_text='including all taxes', max_length=20, null=True)),
                ('GST_Amount', models.FloatField(blank=True, help_text='only GST Amount, if no GST enter 0', max_length=10, null=True)),
                ('Delivery_Date', models.DateField(blank=True, help_text='payment due date', null=True)),
                ('Due_Amount', models.FloatField(blank=True, help_text='Due amount till date against billed', max_length=20, null=True)),
                ('Warranty_In', models.CharField(blank=True, choices=[('Month', 'Months'), ('Year', 'Years'), ('Day', 'Days')], max_length=20, null=True)),
                ('Warranty', models.FloatField(blank=True, help_text='such as 1, 2, 3.. months/years/days', max_length=10, null=True)),
                ('Payment_Term_1', models.CharField(blank=True, help_text='payment terms', max_length=60, null=True)),
                ('Payment_Term_2', models.CharField(blank=True, help_text='payment term - optional', max_length=60, null=True)),
                ('Packing_and_Forwarding', models.CharField(blank=True, choices=[('Inclusive', 'Inclusive'), ('Excluded', 'Excluded')], max_length=20, null=True)),
                ('Remarks', models.TextField(blank=True, max_length=500, null=True)),
                ('Lock_Status', models.BooleanField(default=False, help_text='mark if wnat to lock invoice to avoid editing')),
                ('Is_Billed', models.BooleanField(default=False)),
                ('Payment_Final_Status', models.BooleanField(default=False)),
                ('Final_Status', models.BooleanField(default=False)),
                ('Is_Manual', models.BooleanField(default=False, help_text='wether it is manual entry or online generation')),
                ('Is_No_PO', models.BooleanField(default=False, help_text='vendor invoice register without reference PO No')),
                ('Attach', models.FileField(blank=True, help_text='attach po copies if available', null=True, upload_to='manualpos/')),
                ('ds', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor_Invoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Against', models.CharField(choices=[('Against Issued PO', 'Against Issued PO'), ('No PO', 'No PO')], max_length=30, null=True)),
                ('Invoice_Description', models.TextField(blank=True, help_text='invoice short description', max_length=500, null=True)),
                ('Invoice_No', models.CharField(help_text='vendor issued invoice no against po', max_length=30, null=True, unique=True)),
                ('Invoice_Date', models.DateTimeField(help_text='billed date', null=True)),
                ('Invoice_Amount', models.FloatField(help_text='including all taxes', max_length=20, null=True)),
                ('GST_Amount', models.FloatField(help_text='only GST Amount, if no GST enter 0', max_length=10, null=True)),
                ('CESS_Amount', models.FloatField(blank=True, help_text='CESS Amount', max_length=10, null=True)),
                ('Due_Amount', models.FloatField(blank=True, help_text='Due amount till date against billed', max_length=20, null=True)),
                ('Credit_Days', models.IntegerField(blank=True, default=0, help_text='credit in days such as 0, 15, 30, 60 etc..', null=True)),
                ('Payment_Cleared_Date', models.DateTimeField(blank=True, help_text='date of payment clearing', null=True)),
                ('Payment_Over_Due_Days', models.IntegerField(blank=True, help_text='overdue in days such as 0, 30 etc..', null=True)),
                ('Payment_Due_Date', models.DateField(blank=True, help_text='payment due date', null=True)),
                ('Attach', models.FileField(blank=True, help_text='attach order copy if available', null=True, upload_to='vendorinvoices/')),
                ('PO_No', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Products.purchases')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor_Payment_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Paid_Amount', models.FloatField(blank=True, help_text='received payment against this order', max_length=20, null=True)),
                ('Payment_Type', models.CharField(blank=True, choices=[('Due', 'Due'), ('Advance', 'Advance')], max_length=20, null=True)),
                ('Payment_Date', models.DateTimeField(blank=True, help_text='payment received date', null=True)),
                ('As_Advance_Amount', models.FloatField(blank=True, help_text='If any as advance after clear all bills', max_length=20, null=True)),
                ('Next_Commitment_Date', models.DateField(blank=True, help_text='specify if any next payment commitment date', null=True)),
                ('Invoice_No', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Products.vendor_invoices')),
                ('PO_No', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Products.purchases')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UserAccounts.account')),
            ],
        ),
        migrations.AddField(
            model_name='vendor_invoices',
            name='Payment_Status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Products.vendor_payment_status'),
        ),
        migrations.AddField(
            model_name='vendor_invoices',
            name='Vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Projects.venddt'),
        ),
        migrations.AddField(
            model_name='vendor_invoices',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UserAccounts.account'),
        ),
        migrations.AddField(
            model_name='purchases',
            name='Billing_Status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Products.vendor_invoices'),
        ),
        migrations.AddField(
            model_name='purchases',
            name='Delivery_Update',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Products.po_delivery_status'),
        ),
        migrations.AddField(
            model_name='purchases',
            name='Order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Orders.orders'),
        ),
        migrations.AddField(
            model_name='purchases',
            name='PO_From',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pofrom', to='Projects.companydetails'),
        ),
        migrations.AddField(
            model_name='purchases',
            name='PO_No_Format',
            field=models.ForeignKey(blank=True, limit_choices_to=models.Q(('No_Format_Related_To__in', ['PO'])), null=True, on_delete=django.db.models.deletion.SET_NULL, to='Projects.no_formats'),
        ),
        migrations.AddField(
            model_name='purchases',
            name='Payment_Status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Products.vendor_payment_status'),
        ),
        migrations.AddField(
            model_name='purchases',
            name='Related_Project',
            field=models.ForeignKey(blank=True, help_text='leave empty if product meant for many projects', null=True, on_delete=django.db.models.deletion.SET_NULL, to='Projects.projects'),
        ),
        migrations.AddField(
            model_name='purchases',
            name='Shipping_To',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipto', to='Projects.companydetails'),
        ),
        migrations.AddField(
            model_name='purchases',
            name='Terms_and_Conditions',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Products.po_terms_conditions'),
        ),
        migrations.AddField(
            model_name='purchases',
            name='Vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Projects.venddt'),
        ),
        migrations.AddField(
            model_name='purchases',
            name='Vendor_Contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Projects.vendcontdt'),
        ),
        migrations.AddField(
            model_name='purchases',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UserAccounts.account'),
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Product_Name', models.TextField(help_text='product name and its description', max_length=1000, null=True, unique=True)),
                ('Product_Type', models.CharField(blank=True, choices=[('Finished Goods', 'Finished Goods'), ('Services', 'Services'), ('Raw Material', 'Raw Material')], max_length=30, null=True)),
                ('Make', models.CharField(blank=True, help_text='product make - optional', max_length=50, null=True)),
                ('Item_Code', models.CharField(blank=True, default=0, help_text='BOM No for your internal reference', max_length=15, null=True)),
                ('UOM', models.CharField(blank=True, help_text='item code if available', max_length=15, null=True)),
                ('Active_From', models.DateField(blank=True, help_text='product active since', null=True)),
                ('Stock', models.FloatField(blank=True, help_text='Present Stock', max_length=10, null=True)),
                ('Attach', models.FileField(blank=True, help_text='attach product datasheet if available', null=True, upload_to='productdatasheets/')),
                ('Status', models.BooleanField(default=True, help_text='present product active status')),
                ('Related_Project', models.ForeignKey(blank=True, help_text='leave empty if product meant for many workareas/divisions', null=True, on_delete=django.db.models.deletion.SET_NULL, to='Projects.projects')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UserAccounts.account')),
            ],
        ),
        migrations.CreateModel(
            name='Product_Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_Price', models.FloatField(help_text='each unit price excluding all taxes', max_length=15, null=True)),
                ('GST', models.FloatField(blank=True, help_text='GST in % such as 12, 18 etc', max_length=5, null=True)),
                ('HSN_Code', models.IntegerField(blank=True, help_text='HSN/SAC Code for this product', null=True)),
                ('CESS', models.FloatField(blank=True, help_text='CESS in % if applicable', max_length=5, null=True)),
                ('Other_Taxes', models.FloatField(blank=True, help_text='specify if any other taxes in % only', max_length=5, null=True)),
                ('TDS_Deductions', models.FloatField(blank=True, help_text='specify if TDS deductions in % only', max_length=5, null=True)),
                ('Product_Name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Products.products')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UserAccounts.account')),
            ],
        ),
        migrations.CreateModel(
            name='Product_Movement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Quantity', models.FloatField(help_text='quantity in nos/sets/kgs/ltrs/bags', max_length=10, null=True)),
                ('Movement_Type', models.CharField(choices=[('Added', 'Added'), ('Substracted', 'Substracted')], max_length=15, null=True)),
                ('Date', models.DateField(blank=True, help_text='product added/updated date', null=True)),
                ('Stock', models.FloatField(blank=True, help_text='Present Stock', max_length=10, null=True)),
                ('Other_Reason', models.CharField(blank=True, choices=[('Damaged', 'Damaged'), ('Scrap', 'Scrap'), ('Missing', 'Missing'), ('Expired', 'Expired')], max_length=15, null=True)),
                ('Product_Name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Products.products')),
                ('Related_Bill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Orders.invoices')),
                ('Related_PO', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Products.purchases')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UserAccounts.account')),
            ],
        ),
        migrations.AddField(
            model_name='po_terms_conditions',
            name='PO_No',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Products.purchases'),
        ),
        migrations.CreateModel(
            name='PO_Items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Quantity', models.FloatField(max_length=10, null=True)),
                ('Add_Item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Products.product_price')),
                ('PO_No', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Products.purchases')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UserAccounts.account')),
            ],
        ),
        migrations.AddField(
            model_name='po_delivery_status',
            name='PO_No',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Products.purchases'),
        ),
        migrations.AddField(
            model_name='po_delivery_status',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UserAccounts.account'),
        ),
        migrations.CreateModel(
            name='Copy_PO_Items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Item_Description', models.TextField(blank=True, help_text='Item description', max_length=1000, null=True)),
                ('HSN_Code', models.IntegerField(blank=True, help_text='HSN/SAC Code for this product', null=True)),
                ('Quantity', models.FloatField(help_text='quantity', max_length=10, null=True)),
                ('UOM', models.CharField(choices=[('No', 'Nos'), ('Set', 'Sets'), ('Kg', 'Kgs'), ('Mtr', 'Mtrs'), ('Ltr', 'Ltrs'), ('Bag', 'Bags')], max_length=15, null=True)),
                ('Unit_Price', models.FloatField(blank=True, help_text='each unit price excluding all taxes', max_length=15, null=True)),
                ('GST', models.FloatField(blank=True, help_text='GST in % such as 12, 18 etc', max_length=5, null=True)),
                ('CESS', models.FloatField(blank=True, help_text='CESS in % if applicable', max_length=5, null=True)),
                ('TDS_Deductions', models.FloatField(blank=True, help_text='specify if TDS deductions in % only', max_length=5, null=True)),
                ('Other_Taxes', models.FloatField(blank=True, help_text='specify if any other taxes in % only', max_length=5, null=True)),
                ('Item_From_Product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Products.po_items')),
                ('PO_No', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Products.purchases')),
            ],
        ),
    ]
