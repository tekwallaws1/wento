# Generated by Django 3.2.16 on 2023-02-23 11:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Projects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(help_text='full name of the employee including sir name', max_length=30, null=True)),
                ('Nick_Name', models.CharField(help_text='short calling name or nick name', max_length=10, null=True)),
                ('Gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('Phone_Number', models.CharField(help_text='contact number', max_length=10, null=True)),
                ('Designation', models.CharField(blank=True, help_text='leave as blank if not available', max_length=100, null=True)),
                ('Department', models.CharField(blank=True, help_text='leave as blank if not available', max_length=100, null=True)),
                ('Employee_Id', models.CharField(blank=True, help_text='employee id or serial number', max_length=15, null=True, unique=True)),
                ('Relationship', models.CharField(blank=True, choices=[('Permanent', 'Permanent'), ('Contract', 'Contract')], max_length=20, null=True)),
                ('Joining_Date', models.DateField(blank=True, help_text='date of joining', null=True)),
                ('Email', models.EmailField(blank=True, help_text='official email or personal email', max_length=50, null=True)),
                ('Support', models.CharField(blank=True, choices=[('Online', 'Online'), ('Field', 'Field'), ('Offline', 'Offline')], max_length=20, null=True)),
                ('Upload_Photo', models.FileField(blank=True, help_text='upload employee photo', upload_to='employes/')),
                ('Status', models.BooleanField(default=True, help_text='unmark if he is not active/leave organisation')),
                ('ds', models.BooleanField(default=True)),
                ('Sr_No', models.IntegerField(blank=True, help_text='employee id only serial number', null=True, unique=True)),
                ('Is_Super_Admin', models.BooleanField(default=False)),
                ('Only_Their_Works', models.BooleanField(default=False)),
                ('Is_Marketing_Excecutive', models.BooleanField(default=False)),
                ('RC', models.ManyToManyField(blank=True, null=True, to='Projects.CompanyDetails')),
                ('Related_Project', models.ManyToManyField(blank=True, null=True, to='Projects.Projects')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['Sr_No'],
            },
        ),
        migrations.CreateModel(
            name='Page_Modes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Mode', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Category', models.CharField(blank=True, choices=[('HR', 'HR'), ('Contact Management', 'Contact Management'), ('Expenses', 'Expenses'), ('Products', 'Products'), ('Purchases', 'Purchases'), ('Sales', 'Sales'), ('GST', 'GST')], max_length=30, null=True)),
                ('Page', models.CharField(blank=True, max_length=100, null=True)),
                ('Mode', models.ManyToManyField(blank=True, null=True, to='UserAccounts.Page_Modes')),
            ],
        ),
        migrations.CreateModel(
            name='Page_Permissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(blank=True, null=True)),
                ('Is_Admin', models.BooleanField(default=False)),
                ('Edit_Permissions', models.ManyToManyField(blank=True, limit_choices_to=models.Q(('Mode__Mode__in', ['Edit'])), null=True, related_name='edit', to='UserAccounts.Pages')),
                ('Given_By', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_account', to='UserAccounts.account')),
                ('RC', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Projects.companydetails')),
                ('Related_Project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Projects.projects')),
                ('View_Permissions', models.ManyToManyField(blank=True, limit_choices_to=models.Q(('Mode__Mode__in', ['View'])), null=True, related_name='view', to='UserAccounts.Pages')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Permissions_account', to='UserAccounts.account')),
            ],
        ),
        migrations.CreateModel(
            name='Empl_Salary_Revisions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Previous_Date', models.DateField(blank=True, help_text='salary revision date', null=True)),
                ('Effective_From', models.DateField(help_text='salary revision effective from', null=True)),
                ('Previous_Gross', models.IntegerField(blank=True, help_text='revised gross salary or CTC', null=True)),
                ('Revised_Gross', models.IntegerField(help_text='revised gross salary or CTC', null=True)),
                ('Previous_Basic', models.IntegerField(blank=True, help_text='revised basic salary if revised, otherwise it will take previous basic', null=True)),
                ('Revised_Basic', models.IntegerField(blank=True, help_text='revised basic salary if revised, otherwise it will take previous basic', null=True)),
                ('Next_Revision_Date', models.DateField(blank=True, help_text='salary next revision date, if leave it as blank, it will take a year after date', null=True)),
                ('Status', models.BooleanField(default=True, help_text='active status')),
                ('Employ_Name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UserAccounts.account')),
            ],
        ),
        migrations.CreateModel(
            name='Empl_Salaries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Gross_Salary', models.IntegerField(default=0, help_text='gross salary or CTC', null=True)),
                ('Basic', models.IntegerField(default=0, help_text='basic salary as per govt norms', null=True)),
                ('Special_Allowance', models.FloatField(blank=True, default=0, help_text='monthly conveyances/allowances such as petrol etc.', max_length=10, null=True)),
                ('Tour_Allowance', models.FloatField(blank=True, default=150, help_text='allowed per day tour allowances as per employ designation', max_length=10, null=True)),
                ('HRA', models.FloatField(blank=True, default=0, help_text='house rent allowance, 40% of basic', max_length=10, null=True)),
                ('Other_Allowances', models.FloatField(blank=True, default=0, help_text='other allowances', max_length=10, null=True)),
                ('Net_Salary', models.IntegerField(blank=True, default=0, help_text='you can give it or we will calculate', null=True)),
                ('PF_Amount', models.FloatField(blank=True, default=0, help_text='total 4% of gross, 0.75% employee, 3.25% employer', max_length=10, null=True)),
                ('ESI_Amount', models.FloatField(blank=True, default=0, help_text='total 24% of basic, 12% employee, 12% employer', max_length=10, null=True)),
                ('Professional_Tax', models.FloatField(blank=True, default=0, help_text='PT deductions if eligible, <15K 0, 15-20K 150, >15K 200 of gross', max_length=10, null=True)),
                ('UAN_Number', models.CharField(blank=True, help_text='PF/UAN number if eligible', max_length=12, null=True)),
                ('ESI_Number', models.CharField(blank=True, help_text='ESI number if eligible', max_length=10, null=True)),
                ('PAN_Number', models.CharField(blank=True, help_text='PAN card number', max_length=10, null=True)),
                ('Aadhaar_Number', models.CharField(blank=True, help_text='PAN card number', max_length=12, null=True)),
                ('PF_Eligibility', models.BooleanField(default=True)),
                ('Is_Providing_PF_Employer_Share', models.BooleanField(default=True)),
                ('ESI_Eligibility', models.BooleanField(default=True)),
                ('OT_Eligibility', models.BooleanField(default=False)),
                ('Effective_From', models.DateField(blank=True, help_text='salary effective from', null=True)),
                ('Next_Revision_Date', models.DateField(blank=True, help_text='salary next revision date, if leave it as blank, it will take a year after date', null=True)),
                ('Revision_Status', models.BooleanField(default=False, help_text='mark if revised salary in his employement history')),
                ('Status', models.BooleanField(default=True)),
                ('Employ_Name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UserAccounts.account', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EMP_More_Dtls',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DOB', models.DateField(blank=True, help_text='date of birth', null=True)),
                ('Alternative_Phone', models.CharField(blank=True, help_text='alternative phone number', max_length=10, null=True)),
                ('Aadhaar_No', models.CharField(blank=True, help_text='aadhaar no', max_length=12, null=True, unique=True)),
                ('PAN_No', models.CharField(blank=True, help_text='pan card no', max_length=10, null=True, unique=True)),
                ('Upload_Aadhaar', models.FileField(blank=True, help_text='upload adhaar copy', upload_to='employes/aadhaar/')),
                ('Upload_PAN', models.FileField(blank=True, help_text='upload pan copy', upload_to='employes/pan/')),
                ('Upload_Resume', models.FileField(blank=True, help_text='upload pan copy', upload_to='employes/resumes/')),
                ('Employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='UserAccounts.account')),
            ],
        ),
        migrations.CreateModel(
            name='EMP_End_Dtls',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Releaving_Date', models.DateField(blank=True, help_text='date of releaving', null=True)),
                ('Remarks', models.TextField(blank=True, help_text='remarks or conclusion about employee', max_length=500, null=True)),
                ('Employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UserAccounts.account')),
            ],
        ),
        migrations.CreateModel(
            name='EMP_Bank_Dtls',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Account_No', models.CharField(help_text='bank account number', max_length=40, null=True, unique=True)),
                ('Bank_Name', models.CharField(help_text='bank Name', max_length=30, null=True)),
                ('Branch', models.CharField(blank=True, help_text='bank branch details', max_length=40, null=True)),
                ('IFSC_Code', models.CharField(blank=True, help_text='bank IFSC code', max_length=11, null=True)),
                ('Account_Type', models.CharField(choices=[('Company', 'Company'), ('Personal', 'Personal')], max_length=20, null=True)),
                ('Status', models.BooleanField(default=True, help_text='active status')),
                ('Employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='UserAccounts.account')),
            ],
        ),
    ]
